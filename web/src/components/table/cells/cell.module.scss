.cell {
  display: flex;
  flex-direction: column;
  row-gap: 4px;
  padding: 8px 15px;
  align-items: flex-end;
  align-content: center;
  text-align: right;
  background-color: var(--bg-default);
  border-bottom: 1px solid var(--color-border-primary-faint);
  white-space: nowrap;
  @media only screen and (max-width: 900px) {
    min-width: 0px;
  }
  &.alignLeft {
    text-align: left;
    align-items: flex-start;
    min-width: 200px;
  }
  &.alignRight {
    align-items: flex-end;
    min-width: 170px;
  }
  .past {
    color: var(--fg-muted);
    font-size: var(--font-size-small);
  }
  .positive {
    color: var(--accent1-500);
  }
  .negative {
    color: var(--secondary-500);
  }
}

.totalCell {
  position: sticky;
  z-index: 100;
  bottom: 0;
  background-color: var(--primary-50); //var(--bg-alt-faint);
  //border-top: 1px solid var(--primary-500); //var(--bg-alt-strong);
  .barWrapper {
    display: none !important;
  }
}
.totalCell.empty.locked {
}
.lastTotalCell {
  right: 0;
  bottom: 0;
  z-index: 7;
}

.header {
  position: sticky;
  top: 0;
  z-index: 3;
  display: grid;
  justify-items: end;
  align-items: end;
  grid-row-gap: 5px;
  padding: 16px 16px 12px 16px;
  border-bottom: 1px solid var(--primary-100);
  background-color: var(--bg-default);
  color: var(--primary-600);
  white-space: nowrap;
  font-size: var(--font-size-small);
  &.locked {
    justify-items: start;
  }
  .content {
    display: grid;
    grid-auto-flow: column;
    grid-column-gap: 5px;
  }
}

// TODO: Clean this up after deciding on limitations to column freezing
.locked {
  position: sticky;
  left: 8px;
  top: 0;
  z-index: 5;
  border-right: 1px solid var(--primary-100);
}
.lastEmptyCell {
  position: -webkit-sticky;
  position: sticky;
  right: 0;
  top: 0;
  z-index: 2;
}
.header.locked,
.header.firstEmptyHeader,
.header.lastEmptyHeader {
  z-index: 7;
  border-top-right-radius: var(--radius-large);
}
.header.firstEmptyHeader {
  border-top-left-radius: var(--radius-large);
}
.header.lastEmptyHeader {
  border-top-right-radius: var(--radius-large);
  position: sticky;
  right: 0;
  top: 0;
  z-index: 3;
}

.empty {
  padding: 0;
  min-width: 8px;
}
.empty.locked {
  left: 0;
  border-right: none;
}

.header.TextCell,
.header.DateCell,
.header.DurationCell {
  justify-items: flex-start;
  min-width: initial;
}
.cell.TextCell {
  justify-items: flex-start;
}

.cell.DurationCell {
  justify-items: flex-start;
}
.cell.locked,
.header.locked {
  .text {
    max-width: 200px;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }
  @media only screen and (max-width: 900px) {
    .text {
      max-width: 100px;
    }
    min-width: 0px;
  }
}
.cell.BooleanCell {
  min-width: initial;
  .checked {
    color: var(--secondary-2-600);
  }
  .unchecked {
    color: var(--content-muted);
  }
}
.header.BooleanCell,
.cell.BooleanCell {
  align-items: center;
  justify-content: center;
  min-width: 24px;
}

.link {
  color: var(--primary-600);
}

.noTotalsRow {
  min-height: 10px;
  min-width: 8px;
  position: sticky;
  bottom: 0px;
  z-index: 7;
  border: none;
  &.firstEmptyCell {
    z-index: 8;
    left: 0;
  }
}

/* For extremely small screen devices (595px and below) */
@media only screen and (max-width: 595px) {
  .cell,
  .header {
    padding: 10px 10px;
  }
  .cell.empty,
  .header.empty {
    min-width: 10px;
    padding: 0;
  }
  .locked {
    position: sticky;
    left: 10px;
  }
}

.tableRow {
  display: contents;
}
.tableRow:hover .cell {
  background-color: var(--color-primary-layer-2);
}
.outbound {
  color: #78b0e6;
}

.outboundIcon {
  color: #78b0e6;
  top: 2px;
  position: relative;
}

.inboundIcon {
  top: 2px;
  position: relative;
}
.totalsRow {
  .cell {
    background-color: var(--color-primary-layer-2) !important;
    position: sticky;
    z-index: 100;
    bottom: 0;

    .barWrapper {
      display: none !important;
    }
    &.locked {
      z-index: 105;
    }
  }
}
